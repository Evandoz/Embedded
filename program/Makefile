#############################################################################
# Makefile for building: program
# Generated by qmake (2.01a) (Qt 4.4.0) on: ?? ?? 13 08:33:06 2017
# Project:  program.pro
# Template: app
# Command: /home/sprife/qt4/for_arm/qt-embedded-linux-opensource-src-4.4.0/bin/qmake -unix -o Makefile program.pro
#############################################################################

####### Compiler, tools and options

CC            = arm-linux-gcc
CXX           = arm-linux-g++
DEFINES       = -DQT_NO_DEBUG -DQT_SQL_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/mnt/nfs/Trolltech/qt-embedded-4.4.0/mkspecs/qws/linux-arm-g++ -I. -I/mnt/nfs/Trolltech/qt-embedded-4.4.0/include/QtCore -I/mnt/nfs/Trolltech/qt-embedded-4.4.0/include/QtCore -I/mnt/nfs/Trolltech/qt-embedded-4.4.0/include/QtNetwork -I/mnt/nfs/Trolltech/qt-embedded-4.4.0/include/QtNetwork -I/mnt/nfs/Trolltech/qt-embedded-4.4.0/include/QtGui -I/mnt/nfs/Trolltech/qt-embedded-4.4.0/include/QtGui -I/mnt/nfs/Trolltech/qt-embedded-4.4.0/include/QtSql -I/mnt/nfs/Trolltech/qt-embedded-4.4.0/include/QtSql -I/mnt/nfs/Trolltech/qt-embedded-4.4.0/include -I. -I. -I.
LINK          = arm-linux-g++
LFLAGS        = -Wl,-rpath,/mnt/nfs/Trolltech/qt-embedded-4.4.0/lib
LIBS          = $(SUBLIBS)  -L/mnt/nfs/Trolltech/qt-embedded-4.4.0/lib -lQtSql -L/home/sprife/qt4/for_arm/tslib1.4-install/lib -L/mnt/nfs/Trolltech/qt-embedded-4.4.0/lib -lQtGui -lts -lQtNetwork -lQtCore -lm -lrt -ldl -lpthread
AR            = arm-linux-ar cqs
RANLIB        = arm-linux-ranlib
QMAKE         = /home/sprife/qt4/for_arm/qt-embedded-linux-opensource-src-4.4.0/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -R
INSTALL_FILE  = $(COPY_FILE)
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = $(COPY_FILE)
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = driver.cpp \
		driver_keyboard.cpp \
		finalorder.cpp \
		get_key.c \
		keyboard.c \
		main.cpp \
		menu.cpp \
		myorder.cpp moc_driver_keyboard.cpp \
		moc_finalorder.cpp \
		moc_menu.cpp \
		moc_myorder.cpp
OBJECTS       = driver.o \
		driver_keyboard.o \
		finalorder.o \
		get_key.o \
		keyboard.o \
		main.o \
		menu.o \
		myorder.o \
		moc_driver_keyboard.o \
		moc_finalorder.o \
		moc_menu.o \
		moc_myorder.o
DIST          = /mnt/nfs/Trolltech/qt-embedded-4.4.0/mkspecs/qconfig.pri \
		/mnt/nfs/Trolltech/qt-embedded-4.4.0/mkspecs/features/qt_functions.prf \
		/mnt/nfs/Trolltech/qt-embedded-4.4.0/mkspecs/features/qt_config.prf \
		/mnt/nfs/Trolltech/qt-embedded-4.4.0/mkspecs/features/exclusive_builds.prf \
		/mnt/nfs/Trolltech/qt-embedded-4.4.0/mkspecs/features/default_pre.prf \
		/mnt/nfs/Trolltech/qt-embedded-4.4.0/mkspecs/features/release.prf \
		/mnt/nfs/Trolltech/qt-embedded-4.4.0/mkspecs/features/default_post.prf \
		/mnt/nfs/Trolltech/qt-embedded-4.4.0/mkspecs/features/warn_on.prf \
		/mnt/nfs/Trolltech/qt-embedded-4.4.0/mkspecs/features/qt.prf \
		/mnt/nfs/Trolltech/qt-embedded-4.4.0/mkspecs/features/unix/thread.prf \
		/mnt/nfs/Trolltech/qt-embedded-4.4.0/mkspecs/features/moc.prf \
		/mnt/nfs/Trolltech/qt-embedded-4.4.0/mkspecs/features/resources.prf \
		/mnt/nfs/Trolltech/qt-embedded-4.4.0/mkspecs/features/uic.prf \
		/mnt/nfs/Trolltech/qt-embedded-4.4.0/mkspecs/features/yacc.prf \
		/mnt/nfs/Trolltech/qt-embedded-4.4.0/mkspecs/features/lex.prf \
		program.pro
QMAKE_TARGET  = program
DESTDIR       =
TARGET        = program

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_finalorder.h ui_menu.h ui_myorder.h $(OBJECTS)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: program.pro  /mnt/nfs/Trolltech/qt-embedded-4.4.0/mkspecs/qws/linux-arm-g++/qmake.conf /mnt/nfs/Trolltech/qt-embedded-4.4.0/mkspecs/qconfig.pri \
		/mnt/nfs/Trolltech/qt-embedded-4.4.0/mkspecs/features/qt_functions.prf \
		/mnt/nfs/Trolltech/qt-embedded-4.4.0/mkspecs/features/qt_config.prf \
		/mnt/nfs/Trolltech/qt-embedded-4.4.0/mkspecs/features/exclusive_builds.prf \
		/mnt/nfs/Trolltech/qt-embedded-4.4.0/mkspecs/features/default_pre.prf \
		/mnt/nfs/Trolltech/qt-embedded-4.4.0/mkspecs/features/release.prf \
		/mnt/nfs/Trolltech/qt-embedded-4.4.0/mkspecs/features/default_post.prf \
		/mnt/nfs/Trolltech/qt-embedded-4.4.0/mkspecs/features/warn_on.prf \
		/mnt/nfs/Trolltech/qt-embedded-4.4.0/mkspecs/features/qt.prf \
		/mnt/nfs/Trolltech/qt-embedded-4.4.0/mkspecs/features/unix/thread.prf \
		/mnt/nfs/Trolltech/qt-embedded-4.4.0/mkspecs/features/moc.prf \
		/mnt/nfs/Trolltech/qt-embedded-4.4.0/mkspecs/features/resources.prf \
		/mnt/nfs/Trolltech/qt-embedded-4.4.0/mkspecs/features/uic.prf \
		/mnt/nfs/Trolltech/qt-embedded-4.4.0/mkspecs/features/yacc.prf \
		/mnt/nfs/Trolltech/qt-embedded-4.4.0/mkspecs/features/lex.prf \
		/mnt/nfs/Trolltech/qt-embedded-4.4.0/lib/libQtSql.prl \
		/mnt/nfs/Trolltech/qt-embedded-4.4.0/lib/libQtCore.prl \
		/mnt/nfs/Trolltech/qt-embedded-4.4.0/lib/libQtGui.prl \
		/mnt/nfs/Trolltech/qt-embedded-4.4.0/lib/libQtNetwork.prl
	$(QMAKE) -unix -o Makefile program.pro
/mnt/nfs/Trolltech/qt-embedded-4.4.0/mkspecs/qconfig.pri:
/mnt/nfs/Trolltech/qt-embedded-4.4.0/mkspecs/features/qt_functions.prf:
/mnt/nfs/Trolltech/qt-embedded-4.4.0/mkspecs/features/qt_config.prf:
/mnt/nfs/Trolltech/qt-embedded-4.4.0/mkspecs/features/exclusive_builds.prf:
/mnt/nfs/Trolltech/qt-embedded-4.4.0/mkspecs/features/default_pre.prf:
/mnt/nfs/Trolltech/qt-embedded-4.4.0/mkspecs/features/release.prf:
/mnt/nfs/Trolltech/qt-embedded-4.4.0/mkspecs/features/default_post.prf:
/mnt/nfs/Trolltech/qt-embedded-4.4.0/mkspecs/features/warn_on.prf:
/mnt/nfs/Trolltech/qt-embedded-4.4.0/mkspecs/features/qt.prf:
/mnt/nfs/Trolltech/qt-embedded-4.4.0/mkspecs/features/unix/thread.prf:
/mnt/nfs/Trolltech/qt-embedded-4.4.0/mkspecs/features/moc.prf:
/mnt/nfs/Trolltech/qt-embedded-4.4.0/mkspecs/features/resources.prf:
/mnt/nfs/Trolltech/qt-embedded-4.4.0/mkspecs/features/uic.prf:
/mnt/nfs/Trolltech/qt-embedded-4.4.0/mkspecs/features/yacc.prf:
/mnt/nfs/Trolltech/qt-embedded-4.4.0/mkspecs/features/lex.prf:
/mnt/nfs/Trolltech/qt-embedded-4.4.0/lib/libQtSql.prl:
/mnt/nfs/Trolltech/qt-embedded-4.4.0/lib/libQtCore.prl:
/mnt/nfs/Trolltech/qt-embedded-4.4.0/lib/libQtGui.prl:
/mnt/nfs/Trolltech/qt-embedded-4.4.0/lib/libQtNetwork.prl:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile program.pro

dist:
	@$(CHK_DIR_EXISTS) .tmp/program21.0.0 || $(MKDIR) .tmp/program21.0.0
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/program21.0.0/ && $(COPY_FILE) --parents connection.h driver.h driver_keyboard.h finalorder.h get_key.h kbd_types.h keyboard.h linuxpatch.h menu.h myorder.h .tmp/program21.0.0/ && $(COPY_FILE) --parents driver.cpp driver_keyboard.cpp finalorder.cpp get_key.c keyboard.c main.cpp menu.cpp myorder.cpp .tmp/program21.0.0/ && $(COPY_FILE) --parents finalorder.ui menu.ui myorder.ui .tmp/program21.0.0/ && (cd `dirname .tmp/program21.0.0` && $(TAR) program21.0.0.tar program21.0.0 && $(COMPRESS) program21.0.0.tar) && $(MOVE) `dirname .tmp/program21.0.0`/program21.0.0.tar.gz . && $(DEL_FILE) -r .tmp/program21.0.0


clean:compiler_clean
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET)
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_driver_keyboard.cpp moc_finalorder.cpp moc_menu.cpp moc_myorder.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_driver_keyboard.cpp moc_finalorder.cpp moc_menu.cpp moc_myorder.cpp
moc_driver_keyboard.cpp: driver_keyboard.h
	/mnt/nfs/Trolltech/qt-embedded-4.4.0/bin/moc $(DEFINES) $(INCPATH) driver_keyboard.h -o moc_driver_keyboard.cpp

moc_finalorder.cpp: ui_myorder.h \
		ui_menu.h \
		ui_finalorder.h \
		driver_keyboard.h \
		finalorder.h
	/mnt/nfs/Trolltech/qt-embedded-4.4.0/bin/moc $(DEFINES) $(INCPATH) finalorder.h -o moc_finalorder.cpp

moc_menu.cpp: ui_menu.h \
		driver.h \
		menu.h
	/mnt/nfs/Trolltech/qt-embedded-4.4.0/bin/moc $(DEFINES) $(INCPATH) menu.h -o moc_menu.cpp

moc_myorder.cpp: ui_myorder.h \
		ui_menu.h \
		driver_keyboard.h \
		myorder.h
	/mnt/nfs/Trolltech/qt-embedded-4.4.0/bin/moc $(DEFINES) $(INCPATH) myorder.h -o moc_myorder.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_finalorder.h ui_menu.h ui_myorder.h
compiler_uic_clean:
	-$(DEL_FILE) ui_finalorder.h ui_menu.h ui_myorder.h
ui_finalorder.h: finalorder.ui
	/mnt/nfs/Trolltech/qt-embedded-4.4.0/bin/uic finalorder.ui -o ui_finalorder.h

ui_menu.h: menu.ui
	/mnt/nfs/Trolltech/qt-embedded-4.4.0/bin/uic menu.ui -o ui_menu.h

ui_myorder.h: myorder.ui
	/mnt/nfs/Trolltech/qt-embedded-4.4.0/bin/uic myorder.ui -o ui_myorder.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean

####### Compile

driver.o: driver.cpp driver.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o driver.o driver.cpp

driver_keyboard.o: driver_keyboard.cpp driver_keyboard.h \
		get_key.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o driver_keyboard.o driver_keyboard.cpp

finalorder.o: finalorder.cpp finalorder.h \
		ui_myorder.h \
		ui_menu.h \
		ui_finalorder.h \
		driver_keyboard.h \
		myorder.h \
		connection.h \
		menu.h \
		driver.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o finalorder.o finalorder.cpp

get_key.o: get_key.c keyboard.h \
		kbd_types.h \
		get_key.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o get_key.o get_key.c

keyboard.o: keyboard.c kbd_types.h \
		keyboard.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o keyboard.o keyboard.c

main.o: main.cpp menu.h \
		ui_menu.h \
		driver.h \
		connection.h \
		linuxpatch.h \
		driver_keyboard.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

menu.o: menu.cpp menu.h \
		ui_menu.h \
		driver.h \
		connection.h \
		myorder.h \
		ui_myorder.h \
		driver_keyboard.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o menu.o menu.cpp

myorder.o: myorder.cpp myorder.h \
		ui_myorder.h \
		ui_menu.h \
		driver_keyboard.h \
		menu.h \
		driver.h \
		connection.h \
		finalorder.h \
		ui_finalorder.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o myorder.o myorder.cpp

moc_driver_keyboard.o: moc_driver_keyboard.cpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_driver_keyboard.o moc_driver_keyboard.cpp

moc_finalorder.o: moc_finalorder.cpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_finalorder.o moc_finalorder.cpp

moc_menu.o: moc_menu.cpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_menu.o moc_menu.cpp

moc_myorder.o: moc_myorder.cpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_myorder.o moc_myorder.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

